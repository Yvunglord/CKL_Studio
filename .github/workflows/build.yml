name: CKL_Studio_CI

on: 
    push:
        branches: ["master", "dev"]
    pull_request: 
        branches: ["master"]

jobs:
  sonarcloud:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Verify structure
      run: |
        # Проверка структуры
        if (!(Test-Path "CKL_Studio.sln")) { throw "Solution file not found" }
        if (!(Test-Path "lib\CKLLib.dll")) { throw "CKLLib.dll not found" }
        if (!(Test-Path "lib\CKLDrawing.dll")) { throw "CKLDrawing.dll not found" }
        tree /f

    - name: Restore original .csproj
      run: |
        # Восстановление оригинального .csproj (удаляем наши временные правки)
        git checkout -- CKL_Studio.csproj

    - name: Manual DLL reference
      run: |
        # Добавляем ссылки вручную через XML
        $xml = [xml](Get-Content "CKL_Studio.csproj")
        $itemGroup = $xml.CreateElement("ItemGroup")
        
        # Добавляем CKLLib
        $ref = $xml.CreateElement("Reference")
        $ref.SetAttribute("Include", "CKLLib")
        $hint = $xml.CreateElement("HintPath")
        $hint.InnerText = "lib\CKLLib.dll"
        $ref.AppendChild($hint)
        $itemGroup.AppendChild($ref)
        
        # Добавляем CKLDrawing
        $ref = $xml.CreateElement("Reference")
        $ref.SetAttribute("Include", "CKLDrawing")
        $hint = $xml.CreateElement("HintPath")
        $hint.InnerText = "lib\CKLDrawing.dll"
        $ref.AppendChild($hint)
        $itemGroup.AppendChild($ref)
        
        $xml.Project.AppendChild($itemGroup)
        $xml.Save("CKL_Studio.csproj")

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Build and analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin /k:"Yvunglord_CKL_Studio" /o:"yvunglord" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        dotnet build CKL_Studio.sln --configuration Release
        dotnet test --configuration Release --collect:"XPlat Code Coverage"
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    - name: Run Roslyn analyzers
      run: dotnet build --configuration Release --no-restore /p:RunAnalyzers=true /p:AnalysisLevel=latest